<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dy.store.authority.mapper.AuthorityMapper">

	<!-- authority 테이블 전체 컬럼 -->
	<sql id="authorityColumns">
		  id
		, email
		, name
		, delete_yn
		, created_date
		, modified_date
	</sql>

	<!-- 사용자 권한 등록 -->
	<insert id="insertUserAuthority" parameterType="AuthorityDto">
		INSERT INTO authority (
			<include refid="authorityColumns" />
		) VALUES (
			#{id}
			, #{email}
			, #{name}
			, 'N'
			, NOW()
			, NULL
		)
	</insert>

	<!-- 사용자 권한 조회 -->
	<select id="selectUserAuthorityDetail" parameterType="AuthorityDto" resultType="AuthorityDto">
		SELECT
			<include refid="authorityColumns" />
		FROM
			authority
		<where>
			<!-- Insert 처리 시에 이미 등록되어 있지만 delete_yn의 값이 'Y'를 가지는 경우를 제외하기 위한 처리 -->
			<if test="@com.dy.store.common.util.MyBatisUtils@isEmpty( deleteYn ) == false">
				delete_yn = #{deleteYn}
			</if>
			AND
				email = #{email}
			AND
				name = #{name}
		</where>
	</select>

	<!-- 사용자 권한 상태 변경 -->
	<update id="updateUserAuthorityStatus" parameterType="AuthorityDto">
		UPDATE authority
		SET
			delete_yn = #{deleteYn}
		WHERE
			email = #{email}
		AND
			name = #{name}
	</update>

	<!-- 사용자 권한 목록 조회 -->
	<select id="selectUserAuthorityList" parameterType="string" resultType="org.springframework.security.core.authority.SimpleGrantedAuthority">
		SELECT
			CONCAT('ROLE_', name) AS name
		FROM
			authority
		<where>
			delete_yn = 'N'
		AND
			email = #{email}
		</where>
	</select>

	<!-- 사용자 전체 권한 수 조회 -->
	<select id="selectUserAuthorityTotalCount" parameterType="string" resultType="int">
		SELECT
			COUNT(*)
		FROM
			authority
		<where>
			delete_yn = 'N'
		AND
			email = #{email}
		</where>
	</select>

</mapper>
